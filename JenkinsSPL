
node('master') {

stage ('SCM Checkout') {
	checkout([$class: 'GitSCM', branches: [[name: '*/DPLExample']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/devops81/DevOps-Demo.git']]])

}

stage ('Compile-Package')

{
def mvnHome = tool name: 'Maven3', type: 'maven'
dir('/var/lib/jenkins/workspace/ScriptedPipeline/examples/feed-combiner-java8-webapp')
{ 
sh "${mvnHome}/bin/mvn clean install"}
}
stage ('Generate JUNIT REPORT') 
	        {
                junit 'examples/feed-combiner-java8-webapp/target/surefire-reports/*.xml' 
            	}
 stage('SonarQub Analysis') {

def mvnHome = tool name: 'Maven3', type: 'maven'

withSonarQubeEnv('SONRQUBE-INST') {
dir('/var/lib/jenkins/workspace/ScriptedPipeline/examples/feed-combiner-java8-webapp')
{
sh "${mvnHome}/bin/mvn sonar:sonar"
}
}

}


stage ('Build Notification')

{
emailext body: '${SCRIPT, template="francois.email.groovy.template"}', recipientProviders: [developers()], subject: '$PROJECT_DEFAULT_SUBJECT', to: 'devops@81@gmail.com'
}

stage ('Deploy to QA')
{

sh 'sudo rm -rf /home/user/warfile/devops.war'
sh 'sudo cp  -rf  /var/lib/jenkins/workspace/FOLDER1/Java-Maven-Pipeline/examples/feed-combiner-java8-webapp/target/devops.war /home/user/warfile/'

}






}

post {
 always {
   sh 'echo "This will always run"'
 }
 success {
  sh 'echo "This will run only if successful"'
 }
 failure {
  sh 'echo "This will run only if failed"'
 }
 unstable {
  sh 'echo "This will run only if the run was marked as unstable"'
 }
 changed {
  sh 'echo "This will run only if the state of the Pipeline has changed"'
  sh 'echo "For example, the Pipeline was previously failing but is now successful"'
  sh 'echo "... or the other way around :)"'
 }
}
